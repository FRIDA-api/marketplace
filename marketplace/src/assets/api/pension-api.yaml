openapi: 3.0.1
info:
  title: FRIDA PensionSerivce
  description: |+
    # Overview
    <p>The Frida PensionService allows customers to perform a calculation of his pension for a specific contract. For this, the user has to configure his visible contracts which can be
    accessed by the DRI platform to perform the calcution using the contract data afterwards. After this configuration the contracts are visible in the pension cockpit. Upon choosing a 
    specfic contract from the fetched list a calculation can be performed. All these steps require a token which has to be requested by the user beforehand from the identity providers of 
    the insurance companies. </p>

    <img style="width:100%; height: auto;" src="FRIDA_PensionInformation_OA3/resources/User_en.png">     
    <p>This UML diagram describes the relationship between the client and the two platforms. He interacts with the DRI portal to calculate his pension.
    The DRI platform then queries the contracts via the customer platform. In addition to that, the customer is able to configure the visible contracts via the customer platform.</p>

    ## Authentication
    <img style="width:100%; height: auto;" src="FRIDA_PensionInformation_OA3/resources/Auth_en.png"> 
    <p> The authentication also is carried out by the incurance company identity provider. The DRI redirects to the relevant login portal. After a successful login the customer
    is redirected to the DRI and the token is saved for later use.<br>
    It is recommended to pay attention to a simple user experience. For example, registration should be possible if a user account does not yet exist with the insurance provider.  
    </p>

    ## Security
    ### Data in Transit
    When information is transmitted via communications networks, there is a risk of unauthorized interception or unauthorized manipulation of information. To ensure the confidentiality and integrity of the information, appropriate measures must be taken to secure the transmission.
    FRIDA uses the recommendations and the minimum standard according to the German Federal Office for Information Security (BSI), as defined here: https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/CloudComputing/SecurityRecommendationsCloudComputingProviders.pdf and https://www.bsi.bund.de/DE/Themen/Oeffentliche-Verwaltung/Mindeststandards/TLS-Protokoll/TLS-Protokoll_node.html

    Accordingly, the following minimum standards apply to communication: 
    * TLS > 1.2 in combination with Perfect Forward Secrecy (PFS). 
     * Older TLS or SSL versions must not be used
     * Use of HTTP Strict Transport Security (HSTS) is recommended
    * Authentication using OpenID Connect 1.0 (OIDC) and authorization using OAuth 2.0
     * For single page applications or native mobile applications: Authorization Code Grant with PKCE
     * Web applications with the ability to securely store passwords (client secret): Authorization Code Grant and optional PKCE
     * The Implicit Grant is not recommended
     * The Password Grant must not be used

    ### Data at Rest
    At Data at Rest, data must be securely stored and processed according to the following criteria: 
    * Encryption
    * Data protection 
    * Data backup
    * Deletion and destruction

    Here the guidelines of the BSI can be used: https://www.bsi.bund.de/DE/Themen/Unternehmen-und-Organisationen/Standards-und-Zertifizierung/IT-Grundschutz/IT-Grundschutz-Kompendium/IT-Grundschutz-Bausteine/Bausteine_Download_Edition_node.html

    In order to be able to guarantee complete end-to-end encryption, measures to secure the data must also be ensured at the provider of the data (e.g. insurance) and the service. This includes both secure storage of the data, as well as the use of encryption within the internal network. Ensuring these guidelines is not part of the FRIDA specification. 

    ## Pension Calculation
    <img style="width:100%; height: auto;" src="FRIDA_PensionInformation_OA3/resources/Case1_en.png">  
    <p>Before starting any calculation the user has to decide which contracts he wants to make accessible to the DRI on the customer portal.
    He can also access the pension cockpit of the DRI which then sends a request with a token to the customer portal. 
    If this process succeed the visible contracts get returned to the customer. </p> <br>
    <p>The customer also has the option to calculate a selected contract which he can send to the DRI. The DRI then asks for the master data of the 
    selected contract from the customer portal with the method "requestMasterData(selectedContract, token)" the request contains the selected
    contract and a token, if this process succeeds the DRI recieves the master data and uses that data to calculate the pension amout, which then
    gets returned to the customer.</p>
      





  termsOfService: https://github.com/FRIDA-official
  contact:
    email: jonas.knebel@gmx.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
  - url: https://test-api-impl-backend-jaxrs.herokuapp.com/v2
externalDocs:
  description: External documentation
  url: http://swagger.io
paths:
  /Contracts:
    post:
      summary: Query all visible contracts defined in the user portal
      security:
        - oAuth2:
            - Contracts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisibleContractsResponse'
        '403':
          description: Authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
      requestBody:
        $ref: '#/components/requestBodies/VisibleContractsRequest'
  /ContractDetails:
    post:
      summary: Query the details for a specific contract
      security:
        - oAuth2:
            - ContractDetails
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDetailsResponse'
        '403':
          description: Authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        '500':
          description: Generic Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
      requestBody:
        $ref: '#/components/requestBodies/ContractDetailsRequest'
components:
  schemas:
    VisibleContractsRequest:
      type: object
      properties:
        id_client:
          type: string
      required:
        - id_client
    VisibleContractsResponse:
      type: object
      properties:
        contract_ids_of_client:
          type: array
          items:
            type: string
            description: contract id of client
      required:
        - contract_ids_of_client
    ErrorList:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
              - detail
            properties:
              code:
                type: string
                description: The code of the error
              title:
                type: string
                description: A displayable title of the error type
              detail:
                type: string
                description: Detail of the error
              meta:
                type: object
                description: Optional additional data for specific error types
    ContractDetailsRequest:
      type: object
      properties:
        contract_id:
          type: string
          format: string
          description: Unique Identifier for contract
      required:
        - contract_id
    Date:
      type: string
      format: date
      description: Date in YYYY-DD-MM Format
    Amount:
      type: object
      properties:
        sum:
          type: number
          format: double
        currency:
          description: According to ISO 4217 (https://de.wikipedia.org/wiki/ISO_4217)
          type: string
          format: string
          example: EUR
    Factor:
      type: object
      properties:
        number_factor:
          type: number
          format: double
    Interest:
      type: object
      properties:
        number_interest:
          type: number
          format: double
    ContractDetails:
      type: object
      properties:
        contract:
          properties:
            type_of_insurance:
              type: string
              enum:
                - STATUTORY_HEALTH_INSURANCE
                - CARE_INSURANCE
                - STATUTORY_PENSION_INSURANCE
                - PRIVATE_PENSION_INSURANCE
                - COMPANY_PENSION
                - ENDOWMENT_LIFE_INSURANCE
            date_notification_status:
              $ref: '#/components/schemas/Date'
            date_start_insurance_contract:
              $ref: '#/components/schemas/Date'
            products:
              type: array
              items:
                type: object
                properties:
                  product_name:
                    type: string
                  product_layer:
                    type: string
                    description: Single digit number, ranging from 0-9, e.g. "3"
                    pattern: ^[0-9]$
                  allocation_company_pension_plan:
                    type: string
                  tax_law_specification:
                    type: string
                  employer_as_policyholder:
                    type: boolean
                  premium_payment_method:
                    type: string
                    enum:
                      - ANNUALY_PAYMENT
                      - QUARTALY_PAYMENT
                      - SEMI_ANNUALY_PAYMENT
                      - MONTHLY_PAYMENT
                      - SINGLE_PAYMENT
                  premium_payment_amount:
                    $ref: '#/components/schemas/Amount'
                  premium_employer_payment_included_current:
                    $ref: '#/components/schemas/Amount'
                  increase_premium:
                    type: object
                    properties:
                      dynamically:
                        type: boolean
                      interval:
                        type: string
                        enum:
                          - ANNUAL
                          - BIENNIAL
                          - TRIENNIAL
                      rate:
                        $ref: '#/components/schemas/Factor'
                      last_assumptipon:
                        $ref: '#/components/schemas/Date'
                  id_chance_risk_category:
                    type: string
                    enum:
                      - CRK1
                      - CRK2
                      - CRK3
                      - CRK4
                      - CRK5
                  eligible_children:
                    type: array
                    description: Enter eligable childrens birthdates in this array. Leave empty, if there are none
                    items:
                      type: object
                      properties:
                        date_of_birth:
                          $ref: '#/components/schemas/Date'
                  elements:
                    type: array
                    items:
                      type: object
                      properties:
                        date_of_retirement_contract:
                          $ref: '#/components/schemas/Date'
                        amount_capital_retirement_guaranteed:
                          type: object
                          properties:
                            current_premium:
                              $ref: '#/components/schemas/Amount'
                            as_of_today:
                              $ref: '#/components/schemas/Amount'
                            without_further_premium:
                              $ref: '#/components/schemas/Amount'
                        factor_pension_guaranteed:
                          $ref: '#/components/schemas/Factor'
                        interest_return_guaranteed:
                          $ref: '#/components/schemas/Interest'
                        amount_capital_extrapolation_guaranteed:
                          $ref: '#/components/schemas/Amount'
                        amount_pension_retirement_guaranteed:
                          type: object
                          properties:
                            current_premium:
                              $ref: '#/components/schemas/Amount'
                            without_further_premium:
                              $ref: '#/components/schemas/Amount'
                            current_premium_and_government_subsidies:
                              $ref: '#/components/schemas/Amount'
                            without_further_premium_and_government_subsidies:
                              $ref: '#/components/schemas/Amount'
                        pension_bereaved_duration_guarateed:
                          $ref: '#/components/schemas/Date'
                        amount_capital_current:
                          $ref: '#/components/schemas/Amount'
                        amount_fund_capital_current:
                          $ref: '#/components/schemas/Amount'
                        amount_capital_extrapolation_current:
                          $ref: '#/components/schemas/Amount'
                        amount_surplus_participation_current:
                          $ref: '#/components/schemas/Amount'
                        buyback_value_with_cancellation_fees:
                          $ref: '#/components/schemas/Amount'
                        interest_return_current:
                          $ref: '#/components/schemas/Interest'
                        amount_premium_payments_total:
                          $ref: '#/components/schemas/Amount'
                        interest_basis_for_extrapolation:
                          $ref: '#/components/schemas/Interest'
                        amount_capital_assuming_fund_performance:
                          type: object
                          properties:
                            current:
                              $ref: '#/components/schemas/Amount'
                            retirement_current_premium:
                              $ref: '#/components/schemas/Amount'
                            retirement_without_further_premium:
                              $ref: '#/components/schemas/Amount'
                        amount_fund_ongoing_charges_annually:
                          $ref: '#/components/schemas/Amount'
                        percent_guaranteed:
                          type: number
                          format: double
                        factor_pension_current:
                          $ref: '#/components/schemas/Factor'
                        amount_pension_as_of_today:
                          $ref: '#/components/schemas/Amount'
                        amount_pension_assuming_surplus_participation_retirement:
                          type: object
                          properties:
                            current_premium:
                              $ref: '#/components/schemas/Amount'
                            without_further_premium:
                              $ref: '#/components/schemas/Amount'
                            current_premium_and_government_subsidies:
                              $ref: '#/components/schemas/Amount'
                            without_further_premium_and_government_subsidies:
                              $ref: '#/components/schemas/Amount'
                        amount_pension_assuming_fund_performance:
                          $ref: '#/components/schemas/Amount'
                        amount_capital_government_subsidies_included_current:
                          $ref: '#/components/schemas/Amount'
                        government_subsidies_in_extrapolation_included:
                          type: boolean
                        full_utilization_government_subsidies:
                          type: boolean
                        indirectly_eligible_government_subsidies:
                          type: boolean
                        amount_government_subsidies_annual:
                          $ref: '#/components/schemas/Amount'
                        amount_government_subsidies_total:
                          $ref: '#/components/schemas/Amount'
                        occupational_disability:
                          type: object
                          properties:
                            waive_premium:
                              type: boolean
                            amount_pension_guaranteed:
                              $ref: '#/components/schemas/Amount'
                            pension_duration:
                              $ref: '#/components/schemas/Date'
                        amount_capital_coverage_death_accidental:
                          $ref: '#/components/schemas/Amount'
                        amount_capital_coverage_death:
                          $ref: '#/components/schemas/Amount'
    ContractDetailsResponse:
      type: object
      properties:
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/ContractDetails'
      required:
        - contracts
  requestBodies:
    VisibleContractsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VisibleContractsRequest'
      description: Here, we use the user id of the specific user to know which contracts to fetch
      required: true
    ContractDetailsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractDetailsRequest'
      description: Fetch contract details for a specific contract
      required: true
  securitySchemes:
    oAuth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.freeinsurancedata.de/oauth2/default/v1/authorize?nonce=anything
          scopes:
            Contracts: Read all visible contracts
            ContractDetails: Read contract details
            openid: OpenId subject
        authorizationCode:
          authorizationUrl: https://login.freeinsurancedata.de/oauth2/default/v1/authorize?nonce=anything
          tokenUrl: https://login.freeinsurancedata.de/oauth2/default/v1/token?nonce=anything
          scopes:
            Contracts: Read all visible contracts
            ContractDetails: Read contract details
            openid: OpenId subject
