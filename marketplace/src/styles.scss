// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$marketplace-primary: mat.define-palette(mat.$indigo-palette);
$marketplace-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$marketplace-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$marketplace-theme: mat.define-light-theme(
  (
    color: (
      primary: $marketplace-primary,
      accent: $marketplace-accent,
      warn: $marketplace-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($marketplace-theme);

/* You can add global styles to this file, and also import other style files */

:root {
  --main-color: #1ab3b9;
  --secondary-color: #82f4d8;
}

@font-face {
  font-family: Comfortaa;
  src: url(assets/fonts/comfortaa--v40-normal-300.woff2);
}

@font-face {
  font-family: Manrope;
  src: url(assets/fonts/manrope--v14-normal-200.woff2);
}

html,
body {
  height: 100%;
  overflow: hidden;
  min-height: 100%;
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: "Manrope", "Helvetica Neue", sans-serif;
  background: radial-gradient(at top center, #22d9e0 0%, #000000 100%) no-repeat
    scroll center center / cover;
}

app-api-documentation .mat-expansion-panel-body {
  padding: 0px !important;
}
.center {
  display: flex;
  height: 100%;
  align-items: center;
  justify-content: center;
}

main {
  //background-color: white;
  max-width: 95%;
  margin: 0 auto;
}

// Media queries for larger screens
@media (min-width: 600px) {
  main {
    max-width: 95%;
  }
}

@media (min-width: 768px) {
  main {
    max-width: 95%;
  }
}

@media (min-width: 992px) {
  main {
    max-width: 90%;
  }
}

@media (min-width: 1200px) {
  main {
    max-width: 80%;
  }
}

@media (min-width: 2100px) {
  main {
    max-width: 70%;
  }
}

.sr-only {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

.overflow-auto {
  overflow: auto;
}

.swagger-ui {

  .info {
    margin: 0 !important;
  }

  .arrow,
  .model-toggle.collapsed {
    filter: invert(99%) sepia(0%) saturate(416%) hue-rotate(314deg)
      brightness(116%) contrast(100%);
  }
  table,
  a,
  .opblock-summary-description,
  .wrapper,
  .models,
  .model-title,
  .models-control,
  .description,
  .scheme-container {
    background: unset !important;
    color: white !important;
  }
}
.swagger-ui .model-box:has(div) {
  width: 100%;
  .model-box {
    overflow: auto;
    width: 100%;
    .model {
      width: 100%;
    }
  }
}

.swagger-ui .prop-type {
  display: flex;
  color: rgb(181, 189, 104);
}
.swagger-ui .prop-format {
  color: rgb(222, 147, 95);
}
.swagger-ui .model-title__text,
.swagger-ui .model-title {
  font-size: 12px;
}

.swagger-ui .model {
  color: rgb(222, 147, 95);
}
.swagger-ui .model td .model {
  padding-right: 20px !important;
  word-wrap: break-word;
  overflow: hidden;
}
.swagger-ui .model-toggle {
  top: 0px;
  vertical-align: middle;
  filter: invert(99%) sepia(0%) saturate(416%) hue-rotate(314deg)
    brightness(116%) contrast(100%);
}
.swagger-ui .model-toggle:after {
  height: 1rem !important;
}
.swagger-ui .model-hint {
  display: none;
}
.swagger-ui
  .response
  *:not(.content-type, .dialog-ux, .prop, .prop-type, .renderedMarkdown, p) {
  color: white;
}
.swagger-ui .model .star {
  color: #cd450a !important;
}
.swagger-ui {
  .title,
  .renderedMarkdown p {
    color: white !important;
  }
}

.mat-expansion-panel {
  background-color: transparent !important;
  border: none !important;
  box-shadow: none !important;
}

.mat-expansion-panel-header {
  height: initial !important;
}

.mat-expansion-indicator::after {
  color: white !important;
}
